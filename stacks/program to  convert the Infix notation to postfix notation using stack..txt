1.infix to postfix
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

#define MAX 100

char stack[MAX];
char infix[MAX], postfix[MAX];
int top = -1;

void inToPost() {
int i, j = 0;
char symbol;

for (i = 0; i &lt; strlen(infix); i++) {
symbol = infix[i];

switch (symbol) {
case &#39;(&#39;:
stack[++top] = symbol;
break;
case &#39;)&#39;:
while (stack[top] != &#39;(&#39;) {
postfix[j++] = stack[top--];
}
top--;
break;
case &#39;+&#39;:
case &#39;-&#39;:
case &#39;*&#39;:

case &#39;/&#39;:
case &#39;%&#39;:
while (top &gt;= 0 &amp;&amp; precedence(stack[top]) &gt; precedence(symbol)) {
postfix[j++] = stack[top--];
}
stack[++top] = symbol;
break;
default:
postfix[j++] = symbol;
break;
}
}

while (top &gt;= 0) {
postfix[j++] = stack[top--];
}

postfix[j] = &#39;\0&#39;;
}

int precedence(char symbol) {
switch (symbol) {
case &#39;(&#39;:
return 0;
case &#39;+&#39;:
case &#39;-&#39;:
return 1;
case &#39;*&#39;:
case &#39;/&#39;:
case &#39;%&#39;:
return 2;

default:
return -1;
}
}

int main() {
printf(&quot;Enter the infix expression: &quot;);
gets(infix);

inToPost();
printf(&quot;The postfix expression is: %s\n&quot;, postfix);

return 0;
}

