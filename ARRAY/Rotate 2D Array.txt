#include <stdio.h>

void rotateArray(int arr[][N], int n) {
for (int layer = 0; layer < n / 2; layer++) {
for (int i = layer; i < n - layer - 1; i++) {
int temp = arr[layer][i];
arr[layer][i] = arr[n - 1 - i][layer];
arr[n - 1 - i][layer] = arr[n - 1 - layer][n - 1 - i];
arr[n - 1 - layer][n - 1 - i] = arr[i][n - 1 - layer];
arr[i][n - 1 - layer] = temp;
}
}
}

int main() {

int arr[][N] = {
{1, 2, 3},
{4, 5, 6},
{7, 8, 9},
};
int n = sizeof(arr) / sizeof(arr[0]);
printf("Original array: \n");
for (int i = 0; i < n; i++) {
for (int j = 0; j < n; j++) {
printf("%d ", arr[i][j]);
}
printf("\n");
}
rotateArray(arr, n);
printf("Rotated array: \n");
for (int i = 0; i < n; i++) {
for (int j = 0; j < n; j++) {
printf("%d ", arr[i][j]);
}
printf("\n");
}

return 0;
}