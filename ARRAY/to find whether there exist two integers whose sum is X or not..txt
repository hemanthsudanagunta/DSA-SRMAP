Q). You are given with array of n distinct intergers and another integer X.
Write a program to find whether there exist two integers whose sum is X or
not. 

A)
#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
return (*(int *)a - *(int *)b);
}

int binarySearch(int arr[], int size, int target) {
int left = 0;
int right = size - 1;
while (left <= right) {
int mid = left + (right - left) / 2;
if (arr[mid] == target) {
return 1;
} else if (arr[mid] < target) {
left = mid + 1;
} else {
right = mid - 1;
}
}
return 0;
}

int hasPairWithSum(int arr[], int size, int X) {
qsort(arr, size, sizeof(int), compare);

for (int i = 0; i < size; i++) {

int complement = X - arr[i];
if (binarySearch(arr, size, complement)) {
return 1;
}
}
return 0;
}
int main() {
int n, X;

printf("Enter the size of the array: ");
scanf("%d", &n);
printf("Enter the target sum X: ");
scanf("%d", &X);
int arr[n];

printf("Enter the array elements:\n");
for (int i = 0; i < n; i++) {
scanf("%d", &arr[i]);
}

if (hasPairWithSum(arr, n, X)) {
printf("Yes, there exist two integers whose sum is %d.\n", X);
} else {
printf("No, there are no two integers whose sum is %d.\n", X);
}
return 0;
}